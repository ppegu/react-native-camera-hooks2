/// <reference types="react" />
import { RecordOptions, TakePictureOptions } from '../interfaces';
export declare const useCamera: (cameraOptions?: import("../interfaces").CameraOptions) => ({
    cameraRef: import("react").MutableRefObject<null>;
    type: any;
    flashMode: "on" | "off" | "torch" | "auto";
    whiteBalance: string;
    autoFocus: any;
    autoFocusPoint: any;
    zoom: number;
    focusDepth: number | undefined;
    cameraState: any;
    drawFocusRingPosition: {
        top: number;
        left: number;
    };
    textBlocks: any[];
    faces: any[];
    barcodes: any[];
    ratio: string | undefined;
    isRecording: boolean;
    setFlash?: undefined;
    setWhiteBalance?: undefined;
    setZoom?: undefined;
    setCameraState?: undefined;
    setAutoFocusPoint?: undefined;
    toggleFacing?: undefined;
    toggleFlash?: undefined;
    toggleWB?: undefined;
    toggleAutoFocus?: undefined;
    touchToFocus?: undefined;
    zoomIn?: undefined;
    zoomOut?: undefined;
    setFocusDepth?: undefined;
    toggleCameraState?: undefined;
    takePicture?: undefined;
    recordVideo?: undefined;
    stopRecording?: undefined;
    pausePreview?: undefined;
    resumePreview?: undefined;
    setRatio?: undefined;
    setIsRecording?: undefined;
    barcodeRecognized?: undefined;
    textRecognized?: undefined;
    facesDetected?: undefined;
} | {
    setFlash: Function;
    setWhiteBalance: Function;
    setZoom: Function;
    setCameraState: any;
    setAutoFocusPoint: Function;
    toggleFacing: any;
    toggleFlash: Function;
    toggleWB: Function;
    toggleAutoFocus: any;
    touchToFocus: Function;
    zoomIn: Function;
    zoomOut: Function;
    setFocusDepth: import("react").Dispatch<import("react").SetStateAction<number | undefined>>;
    toggleCameraState: any;
    takePicture: (options: TakePictureOptions) => Promise<import("../takePicture").TakePictureResponse | undefined>;
    recordVideo: (options: RecordOptions) => Promise<import("../interfaces").RecordResponse | undefined>;
    stopRecording: () => Promise<any>;
    pausePreview: () => Promise<boolean>;
    isRecording: boolean;
    resumePreview: () => Promise<boolean>;
    setRatio: import("react").Dispatch<import("react").SetStateAction<string | undefined>>;
    setIsRecording: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    barcodeRecognized: CallableFunction;
    textRecognized: CallableFunction;
    facesDetected: (response: {
        faces: import("react-native-camera").Face[];
    }) => void;
    cameraRef?: undefined;
    type?: undefined;
    flashMode?: undefined;
    whiteBalance?: undefined;
    autoFocus?: undefined;
    autoFocusPoint?: undefined;
    zoom?: undefined;
    focusDepth?: undefined;
    cameraState?: undefined;
    drawFocusRingPosition?: undefined;
    textBlocks?: undefined;
    faces?: undefined;
    barcodes?: undefined;
    ratio?: undefined;
})[];
